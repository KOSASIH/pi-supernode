name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14, 16, 18]  # Test against multiple Node.js versions

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install

      - name: Lint code
        run: npm run lint  # Ensure you have a lint script in your package.json

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build  # Ensure you have a build script in your package.json

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Server
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_KEY: ${{ secrets.SERVER_KEY }}
        run: |
          echo "Deploying to server..."
          ssh -o StrictHostKeyChecking=no -i $SERVER_KEY $SERVER_USER@$SERVER_IP "cd /path/to/your/app && git pull && npm install --production && npm run start"

  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy]

    steps:
      - name: Notify on Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          channel: '#your-channel'
          username: 'CI Bot'
          icon_emoji: ':rocket:'

  cleanup:
    runs-on: ubuntu-latest
    if: always()  # This job runs regardless of previous job success or failure

    steps:
      - name: Cleanup resources
        run: |
          echo "Cleaning up resources..."
          # Add any cleanup commands here, e.g., removing temporary files or logs
